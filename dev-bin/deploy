#!/bin/bash

CURRENT_SCRIPT_DIR_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
PROJECT_DIR_PATH="$(cd "$CURRENT_SCRIPT_DIR_PATH/.." && pwd)"
cd "$PROJECT_DIR_PATH"

HEAD_TMP_DIR="$PROJECT_DIR_PATH/tmp"
TMP_DIR="$HEAD_TMP_DIR/tmp"
DIST_DIR="$PROJECT_DIR_PATH/dist"

[[ -d "$HEAD_TMP_DIR" ]] && rm -rf "$HEAD_TMP_DIR"
mkdir -p "$TMP_DIR"
cp package.json "$TMP_DIR"
cp package-lock.json "$TMP_DIR"
cp config.yaml "$TMP_DIR"
cp body.txt "$TMP_DIR"
cp tsconfig.json "$TMP_DIR"
cp README.md "$TMP_DIR"
cp smtp_email_aggregator_relay.service "$TMP_DIR"
cp -r src "$TMP_DIR"
cp -r tests "$TMP_DIR"
cp -r bin "$TMP_DIR"
ln -s "../../node_modules" "$TMP_DIR/node_modules"
cd "$TMP_DIR"
npm run build
find ./src -name '*.ts' -delete
rm node_modules
rm tsconfig.json
OUTPUT_NAME=smtp-email-aggregator-relay-"$(node -e "console.log(require('./package').version)")"
OUTPUT_FILE="$OUTPUT_NAME".zip
cd "$HEAD_TMP_DIR"
mv tmp "$OUTPUT_NAME"
zip -r "$OUTPUT_FILE" ./*
cd ..
[[ ! -d "$DIST_DIR" ]] && mkdir "$DIST_DIR"
mv "$HEAD_TMP_DIR/$OUTPUT_FILE" "$DIST_DIR"
rm -rf "$HEAD_TMP_DIR"